DATA MODEL

    /* stored data */
    m_graph;                            // dagresjs/graphlib manager
    a_props             = [];           // all props (string index into m_graph)
    a_mechs             = [];           // all mechs (pathId string index into m_graph)

    /* derived data */
    a_components        = [];           // top-level props with no parents, derived
    h_children          = new Map();    // children hash of each prop by id
    h_outedges          = new Map();    // outedges hash of each prop by id

    a_commentThreads    = [];           // all prop and mech comments
    a_resources         = [];
    a_evidence          = [];

    h_evidenceByEvId    = new Map();
    h_evidenceByProp    = new Map();
    h_evlinkByResource  = new Map();
    h_evidenceByMech    = new Map();
    h_propByResource    = new Map();
    h_mechByResource    = new Map();


VIEW MODEL

    map_vprops          = new Map();
    map_vmechs          = new Map();
    map_vbadges         = new Map();
    selected_vprops     = new Set();
    selected_vmechs     = new Set();
    map_rollover        = new Map();

array + map
VM_Get*Changes()
VM_*Exists(id)
VM_Get*(id)
VM_*Delete(id)
VM_*Set(id,element)

