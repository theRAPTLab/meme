{
  // Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "dss bare module": {
    "prefix": "sri-module-outline",
    "description": "a bare module template (es6)",
    "body": [
      "/*///////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\",
      "\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * /////////////////////////////////////*/",
      "",
      "/// LIBRARIES /////////////////////////////////////////////////////////////////",
      "/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n",
      "/// CONSTANTS /////////////////////////////////////////////////////////////////",
      "/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n",
      "/// DECLARATIONS //////////////////////////////////////////////////////////////",
      "/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n",
      "/// CLASS /////////////////////////////////////////////////////////////////////",
      "/// PUBLIC METHODS ////////////////////////////////////////////////////////////",
      "/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n",
      "/// STATIC METHODS ////////////////////////////////////////////////////////////",
      "/// MODULE HELPERS ////////////////////////////////////////////////////////////",
      "/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n",
      "/// INITIALIZATION ////////////////////////////////////////////////////////////",
      "/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n",
      "/// EXPORTS ///////////////////////////////////////////////////////////////////",
      "/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n",
      "/// export default MODULE; // import MOD from './module'",
      "/// export default MyClass; // import MyClass from  './module'",
      "/// export { A, B }; // import { A, B } from './module'",
      "/// export { A as B }; // import { B } from './module'",
    ]
  },
  "dss header comment block": {
    "prefix": "sri-comment-block-header",
    "description": "a comment block with header",
    "body": [
      "\n/// HEADER ////////////////////////////////////////////////////////////////////",
      "/*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*:",
      "    extended comment",
      ":*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/\n"
    ]
  },
  "dss callout comment block": {
    "prefix": "sri-comment-block",
    "description": "comment block",
    "body": [
      "\n/*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*:",
      "    extended comment",
      ":*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/\n"
    ]
  },
  "dss commonjs example": {
    "prefix": "sri-module-commonjs",
    "description": "an example module using CommonJS syntax (node)",
    "body": [
      "/*///////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\",
      "\n  Dave.Sri CommonJS Module Format Template\n",
      "  see https://gitlab.com/inq-seeds/boilerplate/wikis/Module-Style for information\n",
      "\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * /////////////////////////////////////*/",
      "const MyLibrary = require('./mylibrary');",
      "const NpmPackage = require('npm-package');",
      "const ClassName = require('./classes/class-name');",
      "\n/// PRIVATE DECLARATIONS //////////////////////////////////////////////////////",
      "/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "const TYPE_CONSTANT_A = 'A';",
      "let m_collection = [];",
      "\n/// PRIVATE HELPERS ///////////////////////////////////////////////////////////",
      "/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "function m_Method() {",
      "  return 'hello';",
      "}",
      "\n/** Extended Comment Block ***************************************************\\\n",
      "    For in-line documentation or longer explanations of key classes",
      "    No need to add/remove comment prefixes for each line. JUST WRITE.",
      "\n\\*****************************************************************************/",
      "\n/// CLASS DECLARATION /////////////////////////////////////////////////////////",
      "/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "class MyClass {",
      "  /* for declaring classes, one per file */",
      "  /* remove if you're making a module (see below) */",
      "\n  constructor() {",
      "    this.propertyZ = 'Z'; // class iinstance prop declaration",
      "  }",
      "\n  MyClassMethod() {",
      "    /* _NOT_ following lowercase method conventions */",
      "    m_collection.push(this.propertyZ);",
      "  }",
      "}",
      "// class static declarations",
      "MyClass.StaticMethod = () => {",
      "  /* properties attached to class declaration are class-wide (static) */",
      "  /* and accessible by instances, but can not access instance vars (duh) */",
      "};",
      "MyClass.STATIC_CONSTANT = 'foo';",
      "MyClass.staticProperty = 'bar';",
      "\n/// PUBLIC METHODS ////////////////////////////////////////////////////////////",
      "/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "const MODULE = {};",
      "MODULE.propA = 'module property accessed with this or MOD';",
      "/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "/// Description of PublicA",
      "MODULE.PublicA = () => {",
      "  console.log(MODULE.propA);",
      "  console.log(this.propA); // for advanced javascript devs",
      "};",
      "/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "/// Description of PublicB",
      "MODULE.PublicB = () => {",
      "  m_collection = [TYPE_CONSTANT_A, 'B', 'C'];",
      "};",
      "/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "/// Description of PublicC",
      "MODULE.PublicC = () => {",
      "  if (DBG) console.log(`m_Method says ${m_Method()}`);",
      "};",
      "\n/// INITIALIZATION ////////////////////////////////////////////////////////////",
      "/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "/// any code that runs when module is loaded",
      "(function(){ /* something */ })();",
      "\n/// EXPORTS ///////////////////////////////////////////////////////////////////",
      "/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "module.exports = MODULE;",
      "/* or for classes */",
      "module.exports = MyClass;",
      ""
    ]
  },
    "dss es6module example": {
    "prefix": "sri-module-es6",
    "description": "an example module using ES6 syntax (webpack, parcel)",
    "body": [
      "/*///////////////////////////////// ABOUT \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*\\",
      "\n  Dave.Sri ES6 Module Format Template\n",
      "  see https://gitlab.com/inq-seeds/boilerplate/wikis/Module-Style for information\n",
      "\\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ * /////////////////////////////////////*/",
      "import MyLibrary from './mylibrary';",
      "import { MyFunctionA, ObjectB } from './mycollection';",
      "import NpmPackage from 'npm-package';",
      "import ClassName from './classes/class-name'",
      "\n/// PRIVATE DECLARATIONS //////////////////////////////////////////////////////",
      "/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "const TYPE_CONSTANT_A = 'A';",
      "let m_collection = [];",
      "\n/// PRIVATE HELPERS ///////////////////////////////////////////////////////////",
      "/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "// function style 1 - classic!",
      "function m_Method() {",
      "  // classic function creates module-wide closure, ok to use for module-only",
      "  // within the module",
      "  m_collection.push('hello');",
      "  return 'hello';",
      "}",
      "// function style 2 - arrow functio",
      "const eventHandler = event => {",
      "  // arrow functions always bind 'this', so good if call originates",
      "  // from outside the module or from an anonymous function",
      "  m_collection.push(event.target);",
      "}",
      "\n/** Extended Comment Block ***************************************************\\\n",
      "    For in-line documentation or longer explanations of key classes",
      "    No need to add/remove comment prefixes for each line. JUST WRITE.",
      "\n\\*****************************************************************************/",
      "\n/// CLASS DECLARATION /////////////////////////////////////////////////////////",
      "/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "class MyClass {",
      "  /* for declaring classes, one per file */",
      "  /* remove if you're making a module (see below) */",
      "\n  constructor() {",
      "    this.propertyZ = 'Z'; // class iinstance prop declaration",
      "  }",
      "\n  MyClassMethod() {",
      "    /* _NOT_ following lowercase method conventions */",
      "    m_collection.push(this.propertyZ);",
      "  }",
      "}",
      "// class static declarations",
      "MyClass.StaticMethod = () => {",
      "  /* properties attached to class declaration are class-wide (static) */",
      "  /* and accessible by instances, but can not access instance vars (duh) */",
      "};",
      "MyClass.STATIC_CONSTANT = 'foo';",
      "MyClass.staticProperty = 'bar';",
      "\n/// PUBLIC METHODS ////////////////////////////////////////////////////////////",
      "/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "const MODULE = {};",
      "MODULE.propA = 'module property accessed with this or MOD';",
      "/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "/// Description of PublicA",
      "MODULE.PublicA = () => {",
      "  console.log(MODULE.propA);",
      "  console.log(this.propA); // for advanced javascript devs",
      "};",
      "/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "/// Description of PublicB",
      "MODULE.PublicB = () => {",
      "  m_collection = [TYPE_CONSTANT_A, 'B', 'C'];",
      "};",
      "/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "/// Description of PublicC",
      "MODULE.PublicC = () => {",
      "  if (DBG) console.log(`m_Method says ${m_Method()}`);",
      "};",
      "\n/// INITIALIZATION ////////////////////////////////////////////////////////////",
      "/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "/// any code that runs when module is loaded",
      "(function(){ /* something */ })();",
      "\n/// EXPORTS ///////////////////////////////////////////////////////////////////",
      "/// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
      "/// NOTE: ES6 exports are currently tricky due to transition from commonjs.",
      "///       Using single export (default) works for us now, though not optimal",
      "/// export default MODULE; // import MOD from './module'",
      "/// export default MyClass; // import MyClass from  './module'",
      "/// export default { eventHandler, MODULE }; // import MOD from './module'",
      ""
    ]
  }
}
